# -*- coding: utf-8 -*-

"""
shellcardmanagementapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellcardmanagementapis.api_helper import APIHelper


class CreateBundleRequest(object):

    """Implementation of the 'CreateBundleRequest' model.

    TODO: type model description here.

    Attributes:
        col_co_id (int): Collecting Company Id of the selected payer.  
            Optional if ColCoCode is passed else Mandatory.  Example:  1 for
            Philippines  5 for UK
        col_co_code (int): Collecting Company Code (Shell Code) of the
            selected payer.   Mandatory for serviced OUs such as Romania,
            Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other
            countries if ColCoID is provided.  Example:  86 for Philippines  5
            for UK
        payer_id (int): Payer Id of the selected payer. Either PayerId or
            PayerNumber or both must be passed. Example: 123456
        payer_number (str): Payer Number of the selected payer. Either PayerId
            or PayerNumber or both must be passed. Example: GB000000123
        account_id (int): Account ID of the customer. Either AccountId or
            AccountNumber or both must be passed. Example: 123456
        account_number (str): Account Number of the customer.   Either
            AccountId or AccountNumber or both must be passed.  Example:
            GB000000123
        external_bundle_id (str): Identifier of the bundle in external system.
            Optional.
        description (str): A bundle description. Optional.
        cards (List[str]): List of Card PANs to be added in the bundle.
            Mandatory. Example: 7002051006629890645 When PAN matches with
            multiple cards, the restriction will be applied on the latest
            issued card.
        restrictions (object): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "col_co_id": 'ColCoId',
        "col_co_code": 'ColCoCode',
        "payer_id": 'PayerId',
        "payer_number": 'PayerNumber',
        "account_id": 'AccountId',
        "account_number": 'AccountNumber',
        "external_bundle_id": 'ExternalBundleId',
        "description": 'Description',
        "cards": 'Cards',
        "restrictions": 'Restrictions'
    }

    _optionals = [
        'col_co_id',
        'col_co_code',
        'payer_id',
        'payer_number',
        'account_id',
        'account_number',
        'external_bundle_id',
        'description',
        'cards',
        'restrictions',
    ]

    _nullables = [
        'col_co_id',
        'col_co_code',
        'payer_id',
        'account_id',
        'account_number',
        'external_bundle_id',
    ]

    def __init__(self,
                 col_co_id=APIHelper.SKIP,
                 col_co_code=APIHelper.SKIP,
                 payer_id=APIHelper.SKIP,
                 payer_number=APIHelper.SKIP,
                 account_id=APIHelper.SKIP,
                 account_number=APIHelper.SKIP,
                 external_bundle_id=APIHelper.SKIP,
                 description=APIHelper.SKIP,
                 cards=APIHelper.SKIP,
                 restrictions=APIHelper.SKIP):
        """Constructor for the CreateBundleRequest class"""

        # Initialize members of the class
        if col_co_id is not APIHelper.SKIP:
            self.col_co_id = col_co_id 
        if col_co_code is not APIHelper.SKIP:
            self.col_co_code = col_co_code 
        if payer_id is not APIHelper.SKIP:
            self.payer_id = payer_id 
        if payer_number is not APIHelper.SKIP:
            self.payer_number = payer_number 
        if account_id is not APIHelper.SKIP:
            self.account_id = account_id 
        if account_number is not APIHelper.SKIP:
            self.account_number = account_number 
        if external_bundle_id is not APIHelper.SKIP:
            self.external_bundle_id = external_bundle_id 
        if description is not APIHelper.SKIP:
            self.description = description 
        if cards is not APIHelper.SKIP:
            self.cards = cards 
        if restrictions is not APIHelper.SKIP:
            self.restrictions = restrictions 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        col_co_id = dictionary.get("ColCoId") if "ColCoId" in dictionary.keys() else APIHelper.SKIP
        col_co_code = dictionary.get("ColCoCode") if "ColCoCode" in dictionary.keys() else APIHelper.SKIP
        payer_id = dictionary.get("PayerId") if "PayerId" in dictionary.keys() else APIHelper.SKIP
        payer_number = dictionary.get("PayerNumber") if dictionary.get("PayerNumber") else APIHelper.SKIP
        account_id = dictionary.get("AccountId") if "AccountId" in dictionary.keys() else APIHelper.SKIP
        account_number = dictionary.get("AccountNumber") if "AccountNumber" in dictionary.keys() else APIHelper.SKIP
        external_bundle_id = dictionary.get("ExternalBundleId") if "ExternalBundleId" in dictionary.keys() else APIHelper.SKIP
        description = dictionary.get("Description") if dictionary.get("Description") else APIHelper.SKIP
        cards = dictionary.get("Cards") if dictionary.get("Cards") else APIHelper.SKIP
        restrictions = dictionary.get("Restrictions") if dictionary.get("Restrictions") else APIHelper.SKIP
        # Return an object of this model
        return cls(col_co_id,
                   col_co_code,
                   payer_id,
                   payer_number,
                   account_id,
                   account_number,
                   external_bundle_id,
                   description,
                   cards,
                   restrictions)
