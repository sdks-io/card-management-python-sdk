# -*- coding: utf-8 -*-

"""
shellcardmanagementapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellcardmanagementapis.api_helper import APIHelper
from shellcardmanagementapis.models.account_velocity_limit import AccountVelocityLimit


class SearchAccountLimitResponseData(object):

    """Implementation of the 'SearchAccountLimitResponseData' model.

    TODO: type model description here.

    Attributes:
        account_id (int): TODO: type description here.
        account_number (str): Account Number
        reference_product (str): 3 digit Shell global fuel product code, if
            already set up.
        restriction_condition (str): The restriction condition code.
        velocity_limits (List[AccountVelocityLimit]): TODO: type description
            here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_id": 'AccountId',
        "account_number": 'AccountNumber',
        "reference_product": 'ReferenceProduct',
        "restriction_condition": 'RestrictionCondition',
        "velocity_limits": 'VelocityLimits'
    }

    _optionals = [
        'account_id',
        'account_number',
        'reference_product',
        'restriction_condition',
        'velocity_limits',
    ]

    _nullables = [
        'account_id',
        'account_number',
        'reference_product',
        'restriction_condition',
    ]

    def __init__(self,
                 account_id=APIHelper.SKIP,
                 account_number=APIHelper.SKIP,
                 reference_product=APIHelper.SKIP,
                 restriction_condition=APIHelper.SKIP,
                 velocity_limits=APIHelper.SKIP):
        """Constructor for the SearchAccountLimitResponseData class"""

        # Initialize members of the class
        if account_id is not APIHelper.SKIP:
            self.account_id = account_id 
        if account_number is not APIHelper.SKIP:
            self.account_number = account_number 
        if reference_product is not APIHelper.SKIP:
            self.reference_product = reference_product 
        if restriction_condition is not APIHelper.SKIP:
            self.restriction_condition = restriction_condition 
        if velocity_limits is not APIHelper.SKIP:
            self.velocity_limits = velocity_limits 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        account_id = dictionary.get("AccountId") if "AccountId" in dictionary.keys() else APIHelper.SKIP
        account_number = dictionary.get("AccountNumber") if "AccountNumber" in dictionary.keys() else APIHelper.SKIP
        reference_product = dictionary.get("ReferenceProduct") if "ReferenceProduct" in dictionary.keys() else APIHelper.SKIP
        restriction_condition = dictionary.get("RestrictionCondition") if "RestrictionCondition" in dictionary.keys() else APIHelper.SKIP
        velocity_limits = None
        if dictionary.get('VelocityLimits') is not None:
            velocity_limits = [AccountVelocityLimit.from_dictionary(x) for x in dictionary.get('VelocityLimits')]
        else:
            velocity_limits = APIHelper.SKIP
        # Return an object of this model
        return cls(account_id,
                   account_number,
                   reference_product,
                   restriction_condition,
                   velocity_limits)
