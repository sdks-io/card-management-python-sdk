# -*- coding: utf-8 -*-

"""
shellcardmanagementapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellcardmanagementapis.api_helper import APIHelper


class NetworkRestriction(object):

    """Implementation of the 'NetworkRestriction' model.

    Attributes:
        country (str): ISO 3166-1 Numeric-3 code of the country where the
            network restriction is applied. Example: 826 for United Kingdom.
        networks (List[str]): A list of Gateway network codes, typically 7 or
            10 digits. Example: 0002003250
        exclusive (bool): Flag indicates whether the profile is inclusive or
            exclusive. Example: False - (inclusive), i.e. the “Networks”
            property lists the networks in which the transaction will be
            allowed. True - (exclusive), i.e. the “Networks” property lists
            the networks in which the transactions will be declined.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "country": 'Country',
        "networks": 'Networks',
        "exclusive": 'Exclusive'
    }

    _optionals = [
        'country',
        'networks',
        'exclusive',
    ]

    def __init__(self,
                 country=APIHelper.SKIP,
                 networks=APIHelper.SKIP,
                 exclusive=APIHelper.SKIP):
        """Constructor for the NetworkRestriction class"""

        # Initialize members of the class
        if country is not APIHelper.SKIP:
            self.country = country 
        if networks is not APIHelper.SKIP:
            self.networks = networks 
        if exclusive is not APIHelper.SKIP:
            self.exclusive = exclusive 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        country = dictionary.get("Country") if dictionary.get("Country") else APIHelper.SKIP
        networks = dictionary.get("Networks") if dictionary.get("Networks") else APIHelper.SKIP
        exclusive = dictionary.get("Exclusive") if "Exclusive" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(country,
                   networks,
                   exclusive)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'country={(self.country if hasattr(self, "country") else None)!r}, '
                f'networks={(self.networks if hasattr(self, "networks") else None)!r}, '
                f'exclusive={(self.exclusive if hasattr(self, "exclusive") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'country={(self.country if hasattr(self, "country") else None)!s}, '
                f'networks={(self.networks if hasattr(self, "networks") else None)!s}, '
                f'exclusive={(self.exclusive if hasattr(self, "exclusive") else None)!s})')
