# -*- coding: utf-8 -*-

"""
shellcardmanagementapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellcardmanagementapis.api_helper import APIHelper
from shellcardmanagementapis.models.create_bundle_response_data_items_cards_items import CreateBundleResponseDataItemsCardsItems


class CreateBundleResponseDataItems(object):

    """Implementation of the 'CreateBundleResponseDataItems' model.

    TODO: type model description here.

    Attributes:
        bundle_id (str): Identifier of the newly created bundle in Gateway.
        cards (List[CreateBundleResponseDataItemsCardsItems]): List of product
            restriction requests validated and submitted successfully for each
            card.
        day_time_restriction_profile_id (str): Identifier of the day/time
            restriction profile created for the bundle in Gateway.  This will
            be null if respective action is passed as “Default”.
        location_restriction_profile_id (str): Identifier of the location
            restriction profile created for the bundle in Gateway.  This will
            be null if respective action is passed as “Default”.
        product_restriction_profile_id (str): Identifier of the location
            restriction profile created for the bundle in Gateway.  This will
            be null if respective action is passed as “Default”.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "bundle_id": 'BundleId',
        "cards": 'Cards',
        "day_time_restriction_profile_id": 'DayTimeRestrictionProfileId',
        "location_restriction_profile_id": 'LocationRestrictionProfileId',
        "product_restriction_profile_id": 'ProductRestrictionProfileId'
    }

    _optionals = [
        'bundle_id',
        'cards',
        'day_time_restriction_profile_id',
        'location_restriction_profile_id',
        'product_restriction_profile_id',
    ]

    _nullables = [
        'cards',
        'day_time_restriction_profile_id',
        'location_restriction_profile_id',
        'product_restriction_profile_id',
    ]

    def __init__(self,
                 bundle_id=APIHelper.SKIP,
                 cards=APIHelper.SKIP,
                 day_time_restriction_profile_id=APIHelper.SKIP,
                 location_restriction_profile_id=APIHelper.SKIP,
                 product_restriction_profile_id=APIHelper.SKIP):
        """Constructor for the CreateBundleResponseDataItems class"""

        # Initialize members of the class
        if bundle_id is not APIHelper.SKIP:
            self.bundle_id = bundle_id 
        if cards is not APIHelper.SKIP:
            self.cards = cards 
        if day_time_restriction_profile_id is not APIHelper.SKIP:
            self.day_time_restriction_profile_id = day_time_restriction_profile_id 
        if location_restriction_profile_id is not APIHelper.SKIP:
            self.location_restriction_profile_id = location_restriction_profile_id 
        if product_restriction_profile_id is not APIHelper.SKIP:
            self.product_restriction_profile_id = product_restriction_profile_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        bundle_id = dictionary.get("BundleId") if dictionary.get("BundleId") else APIHelper.SKIP
        if 'Cards' in dictionary.keys():
            cards = [CreateBundleResponseDataItemsCardsItems.from_dictionary(x) for x in dictionary.get('Cards')] if dictionary.get('Cards') else None
        else:
            cards = APIHelper.SKIP
        day_time_restriction_profile_id = dictionary.get("DayTimeRestrictionProfileId") if "DayTimeRestrictionProfileId" in dictionary.keys() else APIHelper.SKIP
        location_restriction_profile_id = dictionary.get("LocationRestrictionProfileId") if "LocationRestrictionProfileId" in dictionary.keys() else APIHelper.SKIP
        product_restriction_profile_id = dictionary.get("ProductRestrictionProfileId") if "ProductRestrictionProfileId" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(bundle_id,
                   cards,
                   day_time_restriction_profile_id,
                   location_restriction_profile_id,
                   product_restriction_profile_id)
