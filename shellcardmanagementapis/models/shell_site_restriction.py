# -*- coding: utf-8 -*-

"""
shellcardmanagementapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellcardmanagementapis.api_helper import APIHelper


class ShellSiteRestriction(object):

    """Implementation of the 'ShellSiteRestriction' model.

    TODO: type model description here.

    Attributes:
        country (str): ISO 3166-1 Numeric-3 code of the country where the site
            restriction is applied.  Example: 826 for United Kingdom.
        sites (List[str]): A list of Site IDs in this country, in the format
            “AA1111” where “AA” is a 2-character country code and “1111” is a
            4-digit site number in that country, which is either restricted or
            allowed.  For example, “GB1234”.
        site_groups (List[str]): A list of site group ids in this country
            which is either restricted or allowed.
        exclusive (bool): Flag indicates whether the profile is inclusive or
            exclusive.  Example: False - (inclusive), i.e. the “Sites” &
            “SiteGroups” properties lists the sites & site groups where the
            transaction will be allowed.  True - (exclusive), i.e. the “Sites”
            & “SiteGroups” properties lists the sites and site groups where
            the transactions will be declined.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "country": 'Country',
        "sites": 'Sites',
        "site_groups": 'SiteGroups',
        "exclusive": 'Exclusive'
    }

    _optionals = [
        'country',
        'sites',
        'site_groups',
        'exclusive',
    ]

    def __init__(self,
                 country=APIHelper.SKIP,
                 sites=APIHelper.SKIP,
                 site_groups=APIHelper.SKIP,
                 exclusive=APIHelper.SKIP):
        """Constructor for the ShellSiteRestriction class"""

        # Initialize members of the class
        if country is not APIHelper.SKIP:
            self.country = country 
        if sites is not APIHelper.SKIP:
            self.sites = sites 
        if site_groups is not APIHelper.SKIP:
            self.site_groups = site_groups 
        if exclusive is not APIHelper.SKIP:
            self.exclusive = exclusive 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        country = dictionary.get("Country") if dictionary.get("Country") else APIHelper.SKIP
        sites = dictionary.get("Sites") if dictionary.get("Sites") else APIHelper.SKIP
        site_groups = dictionary.get("SiteGroups") if dictionary.get("SiteGroups") else APIHelper.SKIP
        exclusive = dictionary.get("Exclusive") if "Exclusive" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(country,
                   sites,
                   site_groups,
                   exclusive)
