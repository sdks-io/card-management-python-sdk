# -*- coding: utf-8 -*-

"""
shellcardmanagementapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellcardmanagementapis.api_helper import APIHelper


class GeneratePINKeyResponse(object):

    """Implementation of the 'GeneratePINKeyResponse' model.

    Attributes:
        uid (str): Random generated unique identifier.
        value (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "uid": 'uid',
        "value": 'value'
    }

    _optionals = [
        'uid',
        'value',
    ]

    def __init__(self,
                 uid=APIHelper.SKIP,
                 value=APIHelper.SKIP):
        """Constructor for the GeneratePINKeyResponse class"""

        # Initialize members of the class
        if uid is not APIHelper.SKIP:
            self.uid = uid 
        if value is not APIHelper.SKIP:
            self.value = value 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        uid = dictionary.get("uid") if dictionary.get("uid") else APIHelper.SKIP
        value = dictionary.get("value") if dictionary.get("value") else APIHelper.SKIP
        # Return an object of this model
        return cls(uid,
                   value)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'uid={(self.uid if hasattr(self, "uid") else None)!r}, '
                f'value={(self.value if hasattr(self, "value") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'uid={(self.uid if hasattr(self, "uid") else None)!s}, '
                f'value={(self.value if hasattr(self, "value") else None)!s})')
