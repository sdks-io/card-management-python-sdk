# -*- coding: utf-8 -*-

"""
shellcardmanagementapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellcardmanagementapis.api_helper import APIHelper
from shellcardmanagementapis.models.auto_renew_card_request_auto_renew_cards_items import AutoRenewCardRequestAutoRenewCardsItems


class AutoRenewCardRequest(object):

    """Implementation of the 'AutoRenewCardRequest' model.

    TODO: type model description here.

    Attributes:
        col_co_id (int): Collecting Company Id of the selected payer.  
            Optional if ColCoCode is passed else Mandatory.  Example: 
            1-Philippines  5-UK
        col_co_code (int): Collecting Company Code (Shell Code) of the
            selected payer.   Mandatory for serviced OUs such as Romania,
            Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other
            countries if ColCoID is provided.  Example:  86-Philippines  5-UK
        payer_number (str): Payer Number (Ex: GB000000123) of the selected
            payer.  Optional if PayerId is passed else Mandatory
        payer_id (int): Payer Id  of the selected payer.  Optional if
            PayerNumber is passed else Mandatory
        auto_renew_cards (List[AutoRenewCardRequestAutoRenewCardsItems]):
            TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "col_co_id": 'ColCoId',
        "col_co_code": 'ColCoCode',
        "payer_number": 'PayerNumber',
        "payer_id": 'PayerId',
        "auto_renew_cards": 'AutoRenewCards'
    }

    _optionals = [
        'col_co_id',
        'col_co_code',
        'payer_number',
        'payer_id',
        'auto_renew_cards',
    ]

    def __init__(self,
                 col_co_id=APIHelper.SKIP,
                 col_co_code=APIHelper.SKIP,
                 payer_number=APIHelper.SKIP,
                 payer_id=APIHelper.SKIP,
                 auto_renew_cards=APIHelper.SKIP):
        """Constructor for the AutoRenewCardRequest class"""

        # Initialize members of the class
        if col_co_id is not APIHelper.SKIP:
            self.col_co_id = col_co_id 
        if col_co_code is not APIHelper.SKIP:
            self.col_co_code = col_co_code 
        if payer_number is not APIHelper.SKIP:
            self.payer_number = payer_number 
        if payer_id is not APIHelper.SKIP:
            self.payer_id = payer_id 
        if auto_renew_cards is not APIHelper.SKIP:
            self.auto_renew_cards = auto_renew_cards 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        col_co_id = dictionary.get("ColCoId") if dictionary.get("ColCoId") else APIHelper.SKIP
        col_co_code = dictionary.get("ColCoCode") if dictionary.get("ColCoCode") else APIHelper.SKIP
        payer_number = dictionary.get("PayerNumber") if dictionary.get("PayerNumber") else APIHelper.SKIP
        payer_id = dictionary.get("PayerId") if dictionary.get("PayerId") else APIHelper.SKIP
        auto_renew_cards = None
        if dictionary.get('AutoRenewCards') is not None:
            auto_renew_cards = [AutoRenewCardRequestAutoRenewCardsItems.from_dictionary(x) for x in dictionary.get('AutoRenewCards')]
        else:
            auto_renew_cards = APIHelper.SKIP
        # Return an object of this model
        return cls(col_co_id,
                   col_co_code,
                   payer_number,
                   payer_id,
                   auto_renew_cards)
