# -*- coding: utf-8 -*-

"""
shellcardmanagementapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellcardmanagementapis.api_helper import APIHelper


class CountryRestriction(object):

    """Implementation of the 'CountryRestriction' model.

    TODO: type model description here.

    Attributes:
        countries (List[str]): A list of ISO 3166-1 Numeric-3 country codes.
            Example: 826 for United Kingdom.
        exclusive (bool): Flag indicates whether the profile is inclusive or
            exclusive. Example: False - (inclusive), i.e. the “Countries”
            property lists the countries where the transactions will be
            allowed. True - (exclusive), i.e. the “Countries” property lists
            the countries where the transactions will be declined.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "countries": 'Countries',
        "exclusive": 'Exclusive'
    }

    _optionals = [
        'countries',
        'exclusive',
    ]

    def __init__(self,
                 countries=APIHelper.SKIP,
                 exclusive=APIHelper.SKIP):
        """Constructor for the CountryRestriction class"""

        # Initialize members of the class
        if countries is not APIHelper.SKIP:
            self.countries = countries 
        if exclusive is not APIHelper.SKIP:
            self.exclusive = exclusive 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        countries = dictionary.get("Countries") if dictionary.get("Countries") else APIHelper.SKIP
        exclusive = dictionary.get("Exclusive") if "Exclusive" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(countries,
                   exclusive)
