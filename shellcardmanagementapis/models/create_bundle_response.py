# -*- coding: utf-8 -*-

"""
shellcardmanagementapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellcardmanagementapis.api_helper import APIHelper
from shellcardmanagementapis.models.bundle_card_restriction_status import BundleCardRestrictionStatus
from shellcardmanagementapis.models.error_status import ErrorStatus


class CreateBundleResponse(object):

    """Implementation of the 'CreateBundleResponse' model.

    Attributes:
        request_id (str): Request Id of the API call
        bundle_creation_status (ErrorStatus): The model property of type
            ErrorStatus.
        bundle_id (str): Identifier of the newly created bundle
        day_time_restriction_status (ErrorStatus): The model property of type
            ErrorStatus.
        day_time_restriction_profile_id (str): Identifier of the day/time
            restriction profile created
        location_restriction_status (ErrorStatus): The model property of type
            ErrorStatus.
        location_restriction_profile_id (str): Identifier of the location
            restriction profile created
        usage_restriction_status (ErrorStatus): The model property of type
            ErrorStatus.
        product_restriction_status (ErrorStatus): The model property of type
            ErrorStatus.
        cards (BundleCardRestrictionStatus): The model property of type
            BundleCardRestrictionStatus.
        error (ErrorStatus): The model property of type ErrorStatus.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "request_id": 'RequestId',
        "bundle_creation_status": 'BundleCreationStatus',
        "bundle_id": 'BundleId',
        "day_time_restriction_status": 'DayTimeRestrictionStatus',
        "day_time_restriction_profile_id": 'DayTimeRestrictionProfileId',
        "location_restriction_status": 'LocationRestrictionStatus',
        "location_restriction_profile_id": 'LocationRestrictionProfileId',
        "usage_restriction_status": 'UsageRestrictionStatus',
        "product_restriction_status": 'ProductRestrictionStatus',
        "cards": 'Cards',
        "error": 'Error'
    }

    _optionals = [
        'request_id',
        'bundle_creation_status',
        'bundle_id',
        'day_time_restriction_status',
        'day_time_restriction_profile_id',
        'location_restriction_status',
        'location_restriction_profile_id',
        'usage_restriction_status',
        'product_restriction_status',
        'cards',
        'error',
    ]

    _nullables = [
        'request_id',
    ]

    def __init__(self,
                 request_id=APIHelper.SKIP,
                 bundle_creation_status=APIHelper.SKIP,
                 bundle_id=APIHelper.SKIP,
                 day_time_restriction_status=APIHelper.SKIP,
                 day_time_restriction_profile_id=APIHelper.SKIP,
                 location_restriction_status=APIHelper.SKIP,
                 location_restriction_profile_id=APIHelper.SKIP,
                 usage_restriction_status=APIHelper.SKIP,
                 product_restriction_status=APIHelper.SKIP,
                 cards=APIHelper.SKIP,
                 error=APIHelper.SKIP):
        """Constructor for the CreateBundleResponse class"""

        # Initialize members of the class
        if request_id is not APIHelper.SKIP:
            self.request_id = request_id 
        if bundle_creation_status is not APIHelper.SKIP:
            self.bundle_creation_status = bundle_creation_status 
        if bundle_id is not APIHelper.SKIP:
            self.bundle_id = bundle_id 
        if day_time_restriction_status is not APIHelper.SKIP:
            self.day_time_restriction_status = day_time_restriction_status 
        if day_time_restriction_profile_id is not APIHelper.SKIP:
            self.day_time_restriction_profile_id = day_time_restriction_profile_id 
        if location_restriction_status is not APIHelper.SKIP:
            self.location_restriction_status = location_restriction_status 
        if location_restriction_profile_id is not APIHelper.SKIP:
            self.location_restriction_profile_id = location_restriction_profile_id 
        if usage_restriction_status is not APIHelper.SKIP:
            self.usage_restriction_status = usage_restriction_status 
        if product_restriction_status is not APIHelper.SKIP:
            self.product_restriction_status = product_restriction_status 
        if cards is not APIHelper.SKIP:
            self.cards = cards 
        if error is not APIHelper.SKIP:
            self.error = error 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        request_id = dictionary.get("RequestId") if "RequestId" in dictionary.keys() else APIHelper.SKIP
        bundle_creation_status = ErrorStatus.from_dictionary(dictionary.get('BundleCreationStatus')) if 'BundleCreationStatus' in dictionary.keys() else APIHelper.SKIP
        bundle_id = dictionary.get("BundleId") if dictionary.get("BundleId") else APIHelper.SKIP
        day_time_restriction_status = ErrorStatus.from_dictionary(dictionary.get('DayTimeRestrictionStatus')) if 'DayTimeRestrictionStatus' in dictionary.keys() else APIHelper.SKIP
        day_time_restriction_profile_id = dictionary.get("DayTimeRestrictionProfileId") if dictionary.get("DayTimeRestrictionProfileId") else APIHelper.SKIP
        location_restriction_status = ErrorStatus.from_dictionary(dictionary.get('LocationRestrictionStatus')) if 'LocationRestrictionStatus' in dictionary.keys() else APIHelper.SKIP
        location_restriction_profile_id = dictionary.get("LocationRestrictionProfileId") if dictionary.get("LocationRestrictionProfileId") else APIHelper.SKIP
        usage_restriction_status = ErrorStatus.from_dictionary(dictionary.get('UsageRestrictionStatus')) if 'UsageRestrictionStatus' in dictionary.keys() else APIHelper.SKIP
        product_restriction_status = ErrorStatus.from_dictionary(dictionary.get('ProductRestrictionStatus')) if 'ProductRestrictionStatus' in dictionary.keys() else APIHelper.SKIP
        cards = BundleCardRestrictionStatus.from_dictionary(dictionary.get('Cards')) if 'Cards' in dictionary.keys() else APIHelper.SKIP
        error = ErrorStatus.from_dictionary(dictionary.get('Error')) if 'Error' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(request_id,
                   bundle_creation_status,
                   bundle_id,
                   day_time_restriction_status,
                   day_time_restriction_profile_id,
                   location_restriction_status,
                   location_restriction_profile_id,
                   usage_restriction_status,
                   product_restriction_status,
                   cards,
                   error)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'request_id={(self.request_id if hasattr(self, "request_id") else None)!r}, '
                f'bundle_creation_status={(self.bundle_creation_status if hasattr(self, "bundle_creation_status") else None)!r}, '
                f'bundle_id={(self.bundle_id if hasattr(self, "bundle_id") else None)!r}, '
                f'day_time_restriction_status={(self.day_time_restriction_status if hasattr(self, "day_time_restriction_status") else None)!r}, '
                f'day_time_restriction_profile_id={(self.day_time_restriction_profile_id if hasattr(self, "day_time_restriction_profile_id") else None)!r}, '
                f'location_restriction_status={(self.location_restriction_status if hasattr(self, "location_restriction_status") else None)!r}, '
                f'location_restriction_profile_id={(self.location_restriction_profile_id if hasattr(self, "location_restriction_profile_id") else None)!r}, '
                f'usage_restriction_status={(self.usage_restriction_status if hasattr(self, "usage_restriction_status") else None)!r}, '
                f'product_restriction_status={(self.product_restriction_status if hasattr(self, "product_restriction_status") else None)!r}, '
                f'cards={(self.cards if hasattr(self, "cards") else None)!r}, '
                f'error={(self.error if hasattr(self, "error") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'request_id={(self.request_id if hasattr(self, "request_id") else None)!s}, '
                f'bundle_creation_status={(self.bundle_creation_status if hasattr(self, "bundle_creation_status") else None)!s}, '
                f'bundle_id={(self.bundle_id if hasattr(self, "bundle_id") else None)!s}, '
                f'day_time_restriction_status={(self.day_time_restriction_status if hasattr(self, "day_time_restriction_status") else None)!s}, '
                f'day_time_restriction_profile_id={(self.day_time_restriction_profile_id if hasattr(self, "day_time_restriction_profile_id") else None)!s}, '
                f'location_restriction_status={(self.location_restriction_status if hasattr(self, "location_restriction_status") else None)!s}, '
                f'location_restriction_profile_id={(self.location_restriction_profile_id if hasattr(self, "location_restriction_profile_id") else None)!s}, '
                f'usage_restriction_status={(self.usage_restriction_status if hasattr(self, "usage_restriction_status") else None)!s}, '
                f'product_restriction_status={(self.product_restriction_status if hasattr(self, "product_restriction_status") else None)!s}, '
                f'cards={(self.cards if hasattr(self, "cards") else None)!s}, '
                f'error={(self.error if hasattr(self, "error") else None)!s})')
