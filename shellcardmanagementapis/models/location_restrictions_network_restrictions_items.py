# -*- coding: utf-8 -*-

"""
shellcardmanagementapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellcardmanagementapis.api_helper import APIHelper


class LocationRestrictionsNetworkRestrictionsItems(object):

    """Implementation of the 'LocationRestrictionsNetworkRestrictionsItems' model.

    TODO: type model description here.

    Attributes:
        country (str): ISO 3166-1 Numeric-3 code of the country where the
            network restriction is applied.  Example: 826 for United Kingdom. 
            Mandatory
        exclusive (bool): Flag indicates whether the profile is inclusive or
            exclusive.  Mandatory  Example: False - (inclusive), i.e. the
            “Networks” property lists the networks in which the transaction
            will be allowed.  True - (exclusive), i.e. the “Networks” property
            lists the networks in which the transactions will be declined.
        networks (List[str]): A list of Gateway network codes, typically 7 or
            10 digits.  Example: 0002003250

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "country": 'Country',
        "exclusive": 'Exclusive',
        "networks": 'Networks'
    }

    _optionals = [
        'networks',
    ]

    def __init__(self,
                 country=None,
                 exclusive=None,
                 networks=APIHelper.SKIP):
        """Constructor for the LocationRestrictionsNetworkRestrictionsItems class"""

        # Initialize members of the class
        self.country = country 
        self.exclusive = exclusive 
        if networks is not APIHelper.SKIP:
            self.networks = networks 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        country = dictionary.get("Country") if dictionary.get("Country") else None
        exclusive = dictionary.get("Exclusive") if "Exclusive" in dictionary.keys() else None
        networks = dictionary.get("Networks") if dictionary.get("Networks") else APIHelper.SKIP
        # Return an object of this model
        return cls(country,
                   exclusive,
                   networks)
