# -*- coding: utf-8 -*-

"""
shellcardmanagementapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellcardmanagementapis.api_helper import APIHelper
from shellcardmanagementapis.models.pin_reminder_card_details import PINReminderCardDetails


class PINReminderRequest(object):

    """Implementation of the 'PINReminderRequest' model.

    This entity models the data that is received in the https request body of
    the PINReminder operation.

    Attributes:
        account_id (int): Account Id of the customer.<br /> Optional if
            AccountNumber is passed, else Mandatory.<br /> This input is a
            search criterion, if given.
        account_number (str): Account Number of the customer.<br /> Optional
            if AccountId is passed, else Mandatory.<br /> This input is a
            search criterion, if given.
        col_co_code (int): Collecting Company Code (Shell Code) of the
            selected payer. <br /> Mandatory for serviced OUs such as Romania,
            Latvia, Lithuania, Estonia, Ukraine etc. <br /> It is optional for
            other countries if ColCoID is provided.
        col_co_id (int): Collecting Company Id of the selected payer<br />
            Optional if ColCoCode is passed else Mandatory.
        payer_id (int): Payer Id (i.e. Customer Id of the Payment Customer of
            the selected payer.<br /> Optional if PayerNumber is passed else
            Mandatory
        payer_number (str): Payer Number (Ex: GB000000123) of the selected
            payer.<br /> Optional if PayerId is passed else Mandatory
        pin_reminder_card_details (List[PINReminderCardDetails]): List of
            PINReminderCardDetails entity. The fields of this entity are
            described below.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_id": 'AccountId',
        "account_number": 'AccountNumber',
        "col_co_code": 'ColCoCode',
        "col_co_id": 'ColCoId',
        "payer_id": 'PayerId',
        "payer_number": 'PayerNumber',
        "pin_reminder_card_details": 'PINReminderCardDetails'
    }

    _optionals = [
        'account_id',
        'account_number',
        'col_co_code',
        'col_co_id',
        'payer_id',
        'payer_number',
        'pin_reminder_card_details',
    ]

    def __init__(self,
                 account_id=APIHelper.SKIP,
                 account_number=APIHelper.SKIP,
                 col_co_code=APIHelper.SKIP,
                 col_co_id=APIHelper.SKIP,
                 payer_id=APIHelper.SKIP,
                 payer_number=APIHelper.SKIP,
                 pin_reminder_card_details=APIHelper.SKIP):
        """Constructor for the PINReminderRequest class"""

        # Initialize members of the class
        if account_id is not APIHelper.SKIP:
            self.account_id = account_id 
        if account_number is not APIHelper.SKIP:
            self.account_number = account_number 
        if col_co_code is not APIHelper.SKIP:
            self.col_co_code = col_co_code 
        if col_co_id is not APIHelper.SKIP:
            self.col_co_id = col_co_id 
        if payer_id is not APIHelper.SKIP:
            self.payer_id = payer_id 
        if payer_number is not APIHelper.SKIP:
            self.payer_number = payer_number 
        if pin_reminder_card_details is not APIHelper.SKIP:
            self.pin_reminder_card_details = pin_reminder_card_details 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        account_id = dictionary.get("AccountId") if dictionary.get("AccountId") else APIHelper.SKIP
        account_number = dictionary.get("AccountNumber") if dictionary.get("AccountNumber") else APIHelper.SKIP
        col_co_code = dictionary.get("ColCoCode") if dictionary.get("ColCoCode") else APIHelper.SKIP
        col_co_id = dictionary.get("ColCoId") if dictionary.get("ColCoId") else APIHelper.SKIP
        payer_id = dictionary.get("PayerId") if dictionary.get("PayerId") else APIHelper.SKIP
        payer_number = dictionary.get("PayerNumber") if dictionary.get("PayerNumber") else APIHelper.SKIP
        pin_reminder_card_details = None
        if dictionary.get('PINReminderCardDetails') is not None:
            pin_reminder_card_details = [PINReminderCardDetails.from_dictionary(x) for x in dictionary.get('PINReminderCardDetails')]
        else:
            pin_reminder_card_details = APIHelper.SKIP
        # Return an object of this model
        return cls(account_id,
                   account_number,
                   col_co_code,
                   col_co_id,
                   payer_id,
                   payer_number,
                   pin_reminder_card_details)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'account_id={(self.account_id if hasattr(self, "account_id") else None)!r}, '
                f'account_number={(self.account_number if hasattr(self, "account_number") else None)!r}, '
                f'col_co_code={(self.col_co_code if hasattr(self, "col_co_code") else None)!r}, '
                f'col_co_id={(self.col_co_id if hasattr(self, "col_co_id") else None)!r}, '
                f'payer_id={(self.payer_id if hasattr(self, "payer_id") else None)!r}, '
                f'payer_number={(self.payer_number if hasattr(self, "payer_number") else None)!r}, '
                f'pin_reminder_card_details={(self.pin_reminder_card_details if hasattr(self, "pin_reminder_card_details") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'account_id={(self.account_id if hasattr(self, "account_id") else None)!s}, '
                f'account_number={(self.account_number if hasattr(self, "account_number") else None)!s}, '
                f'col_co_code={(self.col_co_code if hasattr(self, "col_co_code") else None)!s}, '
                f'col_co_id={(self.col_co_id if hasattr(self, "col_co_id") else None)!s}, '
                f'payer_id={(self.payer_id if hasattr(self, "payer_id") else None)!s}, '
                f'payer_number={(self.payer_number if hasattr(self, "payer_number") else None)!s}, '
                f'pin_reminder_card_details={(self.pin_reminder_card_details if hasattr(self, "pin_reminder_card_details") else None)!s})')
