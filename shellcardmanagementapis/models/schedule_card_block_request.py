# -*- coding: utf-8 -*-

"""
shellcardmanagementapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellcardmanagementapis.api_helper import APIHelper
from shellcardmanagementapis.models.schedule_card_block_cards_items import ScheduleCardBlockCardsItems


class ScheduleCardBlockRequest(object):

    """Implementation of the 'ScheduleCardBlockRequest' model.

    TODO: type model description here.

    Attributes:
        is_time_supported (bool): Default: False True – It supports both date
            & time. False – It supports only date. Time will be ignored if it
            is provided in the request.
        schedule_card_block_cards (List[ScheduleCardBlockCardsItems]): List of
            ScheduleCardBlockCard entity. Each card in the list will be
            scheduled for Block or Unblock. The details of the entity are
            given below.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "is_time_supported": 'IsTimeSupported',
        "schedule_card_block_cards": 'ScheduleCardBlockCards'
    }

    _optionals = [
        'is_time_supported',
        'schedule_card_block_cards',
    ]

    def __init__(self,
                 is_time_supported=APIHelper.SKIP,
                 schedule_card_block_cards=APIHelper.SKIP):
        """Constructor for the ScheduleCardBlockRequest class"""

        # Initialize members of the class
        if is_time_supported is not APIHelper.SKIP:
            self.is_time_supported = is_time_supported 
        if schedule_card_block_cards is not APIHelper.SKIP:
            self.schedule_card_block_cards = schedule_card_block_cards 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        is_time_supported = dictionary.get("IsTimeSupported") if "IsTimeSupported" in dictionary.keys() else APIHelper.SKIP
        schedule_card_block_cards = None
        if dictionary.get('ScheduleCardBlockCards') is not None:
            schedule_card_block_cards = [ScheduleCardBlockCardsItems.from_dictionary(x) for x in dictionary.get('ScheduleCardBlockCards')]
        else:
            schedule_card_block_cards = APIHelper.SKIP
        # Return an object of this model
        return cls(is_time_supported,
                   schedule_card_block_cards)
